<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Tests\Controllers;

use ApiB4CLib\Controllers\EventosPedidosController;
use ApiB4CLib\Exceptions;
use ApiB4CLib\Models;
use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;

class EventosPedidosControllerTest extends BaseTestController
{
    /**
     * @var EventosPedidosController EventosPedidosController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getEventosPedidosController();
    }

    public function testEnviaEventosDoPedido()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"status\": \"nota-fiscal-emitida\",\r\n  \"descricao\": \"nota emitida man" .
            "ualmente\"\r\n}",
            Models\EnviaEventosDoPedidoRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->enviaEventosDoPedido($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Tue, 29 Sep 2020 19:23:45 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(201)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"message\": \"Evento cadastrado com sucesso\",\r\n  \"responseCode\": \"201\"\r\n}"
            )))
            ->assert();
    }

    public function testListaOsEventosDoPedido()
    {
        // Perform API call
        $result = null;
        try {
            $result = self::$controller->listaOsEventosDoPedido();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Tue, 29 Sep 2020 19:22:51 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"eventos\": [\r\n    {\r\n      \"data\": \"2020-09-28 15:47:16\",\r\n" .
                "      \"status\": \"1\",\r\n      \"descricao\": \"O pagamento nÃ£o foi finaliza" .
                "do\"\r\n    },\r\n    {\r\n      \"data\": \"2020-09-28 15:47:17\",\r\n      \"" .
                "status\": \"2\",\r\n      \"descricao\": \"Aguardando Pagamento\"\r\n    },\r\n" .
                "    {\r\n      \"data\": \"2020-09-29 16:21:35\",\r\n      \"status\": \"4\",\r" .
                "\n      \"descricao\": \"Na ExpediÃ§Ã£o\"\r\n    }\r\n  ]\r\n}"
            )))
            ->assert();
    }
}
