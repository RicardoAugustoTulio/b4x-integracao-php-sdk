<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Tests\Controllers;

use ApiB4CLib\Controllers\ProdutosController;
use ApiB4CLib\Exceptions;
use ApiB4CLib\Models;
use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;

class ProdutosControllerTest extends BaseTestController
{
    /**
     * @var ProdutosController ProdutosController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getProdutosController();
    }

    public function testCadastrarProduto2()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"ativo_erp\": 1,\r\n  \"status_erp\": \"15\",\r\n  \"sku\": \"1467831897\"" .
            ",\r\n  \"sku_associado\": \"2130\",\r\n  \"pai_id\": \"2130\",\r\n  \"nome\": \"Rab" .
            "eta para barco com motor de 7HP Gasolina\",\r\n  \"nome_erp\": \"Rabeta  barco c/ m" .
            "otor de 7HP \",\r\n  \"titulo_seo\": \"\",\r\n  \"titulo\": \"\",\r\n  \"descricao" .
            "\": \"<div style=\\\"text-align: justify;\\\">Rabeta para barco com motor de 4 temp" .
            "os Toyama. Rabeta com motor para ser utilizada em barcos, proporcionando o arranque" .
            ", movimenta&ccedil;&atilde;o e controle de dire&ccedil;&atilde;o em rios, lagos e e" .
            "ntre outros ambientes alagados, inclusive com pouca profundidade. Kit composto por " .
            "rabeta de 1,90 metro e motor a gasolina Toyama de 4 tempos.</div>\",\r\n  \"codigo_" .
            "categoria\": \"475\",\r\n  \"codigo_marca\": \"144\",\r\n  \"palavras_chave\": \"\"" .
            ",\r\n  \"meta_descricao\": \"\",\r\n  \"codigo_fabricante\": \"\",\r\n  \"modelo\":" .
            " \"\",\r\n  \"prod_referencia\": \"TE70\",\r\n  \"restricoes\": [\r\n    \"armas\"," .
            "\r\n    \"inflamavel\",\r\n    \"produtos_toxicos\",\r\n    \"sem_embalagem\",\r\n " .
            "   \"transporte_de_valores\",\r\n    \"produto_fragil\",\r\n    \"restricao\"\r\n  " .
            "],\r\n  \"produtos_sugeridos\": [\r\n    \"SKU1\",\r\n    \"SKU2\",\r\n    \"SKU3\"" .
            ",\r\n    \"SKU4\"\r\n  ],\r\n  \"compre_junto\": [\r\n    \"124497-PTO-M\",\r\n    " .
            "\"124497-PTO-P\",\r\n    \"124497-PTO-3G\"\r\n  ],\r\n  \"categorias\": [\r\n    1," .
            "\r\n    2,\r\n    3,\r\n    4\r\n  ],\r\n  \"ean\": \"7898438025299\",\r\n  \"dimen" .
            "soes\": {\r\n    \"altura\": \"24.00\",\r\n    \"largura\": \"24.00\",\r\n    \"com" .
            "primento\": \"210.00\",\r\n    \"peso\": \"44.0000\"\r\n  },\r\n  \"estoque_dias_se" .
            "m_venda\": \"0\",\r\n  \"estoque_dias_disponivel\": \"0\",\r\n  \"estoque_quantidad" .
            "e_fase_compra\": \"0\",\r\n  \"preco_custo\": \"750.1200\",\r\n  \"preco\": \"750.1" .
            "2\",\r\n  \"unidade_venda\": \"KIT\",\r\n  \"unidade_embalagem\": 1,\r\n  \"venda_m" .
            "inima\": 50,\r\n  \"garantia\": \"0\",\r\n  \"codigo_comprador\": \"3\",\r\n  \"vid" .
            "eo\": \"\",\r\n  \"produto_substituto\": null,\r\n  \"certificado_autorizacao_ca\":" .
            " \"0\",\r\n  \"kit\": [\r\n    {\r\n      \"sku\": \"19368\",\r\n      \"nome_erp\"" .
            ": \"RABETA P/ MOTOR 5,5/6,5CV HELICE 7,5 1,9M RT-1900B TOYAMA\",\r\n      \"quantid" .
            "ade\": \"1\",\r\n      \"desconto\": \"0.00\"\r\n    },\r\n    {\r\n      \"sku\": " .
            "\"5915\",\r\n      \"nome_erp\": \"MOTOR GASOLINA 7,0HP REFRIG AR TE70 TOYAMA\",\r" .
            "\n      \"quantidade\": \"1\",\r\n      \"desconto\": \"0.00\"\r\n    }\r\n  ],\r\n" .
            "  \"crossdocking\": \"0\",\r\n  \"estoques_retira\": [\r\n    {\r\n      \"filial_e" .
            "rp\": \"1\",\r\n      \"quantidade\": \"0\",\r\n      \"considerar_estoque\": \"1\"" .
            ",\r\n      \"lote_id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"2\"," .
            "\r\n      \"quantidade\": \"0\",\r\n      \"considerar_estoque\": \"1\",\r\n      " .
            "\"lote_id\": \"123\"\r\n    }\r\n  ],\r\n  \"estoques\": [\r\n    {\r\n      \"fili" .
            "al_erp\": \"1\",\r\n      \"quantidade\": \"0\",\r\n      \"estoque_dias_sem_venda" .
            "\": \"0\",\r\n      \"estoque_dias_disponivel\": \"0\",\r\n      \"estoque_quantida" .
            "de_fase_compra\": \"0\",\r\n      \"quantidade_vendida\": \"0\",\r\n      \"conside" .
            "rar_estoque\": \"1\",\r\n      \"crossdocking\": \"0\",\r\n      \"quantidade_telev" .
            "enda\": \"111\",\r\n      \"deposito_externo\": 1,\r\n      \"estoque_externo\": \"" .
            "100\",\r\n      \"lote_id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"" .
            "2\",\r\n      \"quantidade\": \"0\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r" .
            "\n      \"estoque_dias_disponivel\": \"0\",\r\n      \"estoque_quantidade_fase_comp" .
            "ra\": \"0\",\r\n      \"quantidade_vendida\": \"0\",\r\n      \"considerar_estoque" .
            "\": \"1\",\r\n      \"crossdocking\": \"0\",\r\n      \"quantidade_televenda\": \"1" .
            "11\",\r\n      \"deposito_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n " .
            "     \"lote_id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"3\",\r\n   " .
            "   \"quantidade\": \"0\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r\n      \"es" .
            "toque_dias_disponivel\": \"0\",\r\n      \"estoque_quantidade_fase_compra\": \"0\"," .
            "\r\n      \"quantidade_vendida\": \"0\",\r\n      \"considerar_estoque\": \"0\",\r" .
            "\n      \"crossdocking\": \"0\",\r\n      \"quantidade_televenda\": \"111\",\r\n   " .
            "   \"deposito_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n      \"lote_" .
            "id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"4\",\r\n      \"quantid" .
            "ade\": \"0\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r\n      \"estoque_dias_d" .
            "isponivel\": \"0\",\r\n      \"estoque_quantidade_fase_compra\": \"0\",\r\n      \"" .
            "quantidade_vendida\": \"0\",\r\n      \"considerar_estoque\": \"1\",\r\n      \"cro" .
            "ssdocking\": \"0\",\r\n      \"quantidade_televenda\": \"111\",\r\n      \"deposito" .
            "_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n      \"lote_id\": \"123\"" .
            "\r\n    }\r\n  ],\r\n  \"acessorios\": [\r\n    {\r\n      \"sku\": \"TMPBKSG\",\r" .
            "\n      \"img\": \"https://produto.jpg\",\r\n      \"obrigatorio\": 1\r\n    },\r\n" .
            "    {\r\n      \"sku\": \"TMPBKSM\",\r\n      \"img\": \"https://produto.jpg\",\r\n" .
            "      \"obrigatorio\": 0\r\n    }\r\n  ],\r\n  \"personalizacoes\": [\r\n    {\r\n " .
            "     \"sku\": \"TCAGL18868\",\r\n      \"nivel\": 1,\r\n      \"tipo\": 1,\r\n     " .
            " \"arte_finalista\": 0\r\n    },\r\n    {\r\n      \"sku\": \"PERSO0101\",\r\n     " .
            " \"nivel\": 1,\r\n      \"tipo\": 1,\r\n      \"arte_finalista\": 1\r\n    }\r\n  ]" .
            ",\r\n  \"atributos\": [\r\n    {\r\n      \"nome\": \"Cor\",\r\n      \"valor\": \"" .
            "Preto\"\r\n    }\r\n  ],\r\n  \"imagens\": [\r\n    {\r\n      \"imagem\": \"https:" .
            "//static.ferramentaskennedy.com.br/storage/original/rabeta-para-barco-com-motor-de-" .
            "7hp-gasolina_11.jpg\",\r\n      \"ordem\": \"2\"\r\n    },\r\n    {\r\n      \"imag" .
            "em\": \"https://static.ferramentaskennedy.com.br/storage/original/rabeta-para-barco" .
            "-com-motor-de-7hp-gasolina_1.jpg\",\r\n      \"ordem\": \"1\"\r\n    },\r\n    {\r" .
            "\n      \"imagem\": \"https://static.ferramentaskennedy.com.br/storage/original/rab" .
            "eta-para-barco-com-motor-de-7hp-gasolina_3.jpg\",\r\n      \"ordem\": \"1\"\r\n    " .
            "},\r\n    {\r\n      \"imagem\": \"https://static.ferramentaskennedy.com.br/storage" .
            "/original/rabeta-para-barco-com-motor-de-7hp-gasolina_5.jpg\",\r\n      \"ordem\": " .
            "\"1\"\r\n    },\r\n    {\r\n      \"imagem\": \"https://static.ferramentaskennedy.c" .
            "om.br/storage/original/rabeta-para-barco-com-motor-de-7hp-gasolina_7.jpg\",\r\n    " .
            "  \"ordem\": \"1\"\r\n    },\r\n    {\r\n      \"imagem\": \"https://static.ferrame" .
            "ntaskennedy.com.br/storage/original/rabeta-para-barco-com-motor-de-7hp-gasolina_9.j" .
            "pg\",\r\n      \"ordem\": \"1\"\r\n    }\r\n  ],\r\n  \"informacoes_fiscais\": {\r" .
            "\n    \"ipi\": null,\r\n    \"cfop\": \"\",\r\n    \"ncm\": \"\",\r\n    \"cest\": " .
            "\"0\",\r\n    \"cst\": \"\",\r\n    \"icms\": \"0.00\",\r\n    \"reducao_icms\": nu" .
            "ll,\r\n    \"icms_st\": \"0.00\",\r\n    \"diferimento_parcial\": \"0.00\",\r\n    " .
            "\"mva\": \"0.00\",\r\n    \"origem\": \"0\",\r\n    \"tipo_origem\": \"\",\r\n    " .
            "\"csosn\": \"400\"\r\n  }\r\n}",
            Models\CadastrarProdutoRequest::class
        );

        // Perform API call
        try {
            self::$controller->cadastrarProduto($body);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testAtualizarProduto()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"ativo_erp\": 1,\r\n  \"status_erp\": \"15\",\r\n  \"sku\": \"1467831897\"" .
            ",\r\n  \"skus_associado\": \"2130\",\r\n  \"pai_id\": \"2130\",\r\n  \"nome\": \"Ra" .
            "beta para barco com motor de 7HP Gasolina\",\r\n  \"nome_erp\": \"Rabeta  barco c/ " .
            "motor de 7HP \",\r\n  \"titulo_seo\": \"\",\r\n  \"titulo\": \"\",\r\n  \"descricao" .
            "\": \"<div style=\\\"text-align: justify;\\\">Rabeta para barco com motor de 4 temp" .
            "os Toyama. Rabeta com motor para ser utilizada em barcos, proporcionando o arranque" .
            ", movimenta&ccedil;&atilde;o e controle de dire&ccedil;&atilde;o em rios, lagos e e" .
            "ntre outros ambientes alagados, inclusive com pouca profundidade. Kit composto por " .
            "rabeta de 1,90 metro e motor a gasolina Toyama de 4 tempos.</div>\",\r\n  \"codigo_" .
            "categoria\": \"475\",\r\n  \"codigo_marca\": \"144\",\r\n  \"palavras_chave\": \"\"" .
            ",\r\n  \"meta_descricao\": \"\",\r\n  \"codigo_fabricante\": \"\",\r\n  \"modelo\":" .
            " \"\",\r\n  \"prod_referencia\": \"TE70\",\r\n  \"restricoes\": [\r\n    \"armas\"," .
            "\r\n    \"inflamavel\",\r\n    \"produtos_toxicos\",\r\n    \"sem_embalagem\",\r\n " .
            "   \"transporte_de_valores\",\r\n    \"produto_fragil\",\r\n    \"restricao\"\r\n  " .
            "],\r\n  \"compre_junto\": [\r\n    \"124497-PTO-M\",\r\n    \"124497-PTO-P\",\r\n  " .
            "  \"124497-PTO-3G\"\r\n  ],\r\n  \"produtos_sugeridos\": [\r\n    \"SKU1\",\r\n    " .
            "\"SKU2\",\r\n    \"SKU3\",\r\n    \"SKU4\"\r\n  ],\r\n  \"categorias\": [\r\n    1," .
            "\r\n    2,\r\n    3,\r\n    4\r\n  ],\r\n  \"ean\": \"7898438025299\",\r\n  \"dimen" .
            "soes\": {\r\n    \"altura\": \"24.00\",\r\n    \"largura\": \"24.00\",\r\n    \"com" .
            "primento\": \"210.00\",\r\n    \"peso\": \"44.0000\"\r\n  },\r\n  \"estoque_dias_se" .
            "m_venda\": \"0\",\r\n  \"estoque_dias_disponivel\": \"0\",\r\n  \"estoque_quantidad" .
            "e_fase_compra\": \"0\",\r\n  \"preco_custo\": \"750.1200\",\r\n  \"preco\": \"750.1" .
            "2\",\r\n  \"unidade_venda\": \"KIT\",\r\n  \"unidade_embalagem\": 1,\r\n  \"venda_m" .
            "inima\": 50,\r\n  \"garantia\": \"0\",\r\n  \"codigo_comprador\": \"3\",\r\n  \"vid" .
            "eo\": \"\",\r\n  \"produto_substituto\": null,\r\n  \"certificado_autorizacao_ca\":" .
            " \"0\",\r\n  \"kit\": [\r\n    {\r\n      \"sku\": \"19368\",\r\n      \"nome_erp\"" .
            ": \"RABETA P/ MOTOR 5,5/6,5CV HELICE 7,5 1,9M RT-1900B TOYAMA\",\r\n      \"quantid" .
            "ade\": \"1\",\r\n      \"desconto\": \"0.00\"\r\n    },\r\n    {\r\n      \"sku\": " .
            "\"5915\",\r\n      \"nome_erp\": \"MOTOR GASOLINA 7,0HP REFRIG AR TE70 TOYAMA\",\r" .
            "\n      \"quantidade\": \"1\",\r\n      \"desconto\": \"0.00\"\r\n    }\r\n  ],\r\n" .
            "  \"crossdocking\": \"0\",\r\n  \"estoques_retira\": [\r\n    {\r\n      \"filial_e" .
            "rp\": \"1\",\r\n      \"quantidade\": \"0\",\r\n      \"considerar_estoque\": \"1\"" .
            ",\r\n      \"lote_id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"2\"," .
            "\r\n      \"quantidade\": \"0\",\r\n      \"considerar_estoque\": \"1\",\r\n      " .
            "\"lote_id\": \"123\"\r\n    }\r\n  ],\r\n  \"estoques\": [\r\n    {\r\n      \"fili" .
            "al_erp\": \"1\",\r\n      \"quantidade\": \"0\",\r\n      \"estoque_dias_sem_venda" .
            "\": \"0\",\r\n      \"estoque_dias_disponivel\": \"0\",\r\n      \"estoque_quantida" .
            "de_fase_compra\": \"0\",\r\n      \"quantidade_vendida\": \"0\",\r\n      \"conside" .
            "rar_estoque\": \"1\",\r\n      \"crossdocking\": \"0\",\r\n      \"quantidade_telev" .
            "enda\": \"111\",\r\n      \"deposito_externo\": 1,\r\n      \"estoque_externo\": \"" .
            "100\",\r\n      \"lote_id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"" .
            "2\",\r\n      \"quantidade\": \"0\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r" .
            "\n      \"estoque_dias_disponivel\": \"0\",\r\n      \"estoque_quantidade_fase_comp" .
            "ra\": \"0\",\r\n      \"quantidade_vendida\": \"0\",\r\n      \"considerar_estoque" .
            "\": \"1\",\r\n      \"crossdocking\": \"0\",\r\n      \"quantidade_televenda\": \"1" .
            "11\",\r\n      \"deposito_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n " .
            "     \"lote_id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"3\",\r\n   " .
            "   \"quantidade\": \"0\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r\n      \"es" .
            "toque_dias_disponivel\": \"0\",\r\n      \"estoque_quantidade_fase_compra\": \"0\"," .
            "\r\n      \"quantidade_vendida\": \"0\",\r\n      \"considerar_estoque\": \"0\",\r" .
            "\n      \"crossdocking\": \"0\",\r\n      \"quantidade_televenda\": \"111\",\r\n   " .
            "   \"deposito_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n      \"lote_" .
            "id\": \"123\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"4\",\r\n      \"quantid" .
            "ade\": \"0\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r\n      \"estoque_dias_d" .
            "isponivel\": \"0\",\r\n      \"estoque_quantidade_fase_compra\": \"0\",\r\n      \"" .
            "quantidade_vendida\": \"0\",\r\n      \"considerar_estoque\": \"1\",\r\n      \"cro" .
            "ssdocking\": \"0\",\r\n      \"quantidade_televenda\": \"111\",\r\n      \"deposito" .
            "_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n      \"lote_id\": \"123\"" .
            "\r\n    }\r\n  ],\r\n  \"acessorios\": [\r\n    {\r\n      \"sku\": \"TMPBKSG\",\r" .
            "\n      \"img\": \"https://produto.jpg\",\r\n      \"obrigatorio\": 1\r\n    },\r\n" .
            "    {\r\n      \"sku\": \"TMPBKSM\",\r\n      \"img\": \"https://produto.jpg\",\r\n" .
            "      \"obrigatorio\": 0\r\n    }\r\n  ],\r\n  \"personalizacoes\": [\r\n    {\r\n " .
            "     \"sku\": \"TCAGL18868\",\r\n      \"nivel\": 1,\r\n      \"tipo\": 1,\r\n     " .
            " \"arte_finalista\": 0\r\n    },\r\n    {\r\n      \"sku\": \"PERSO0101\",\r\n     " .
            " \"nivel\": 1,\r\n      \"tipo\": 1,\r\n      \"arte_finalista\": 1\r\n    }\r\n  ]" .
            ",\r\n  \"atributos\": [\r\n    {\r\n      \"nome\": \"Cor\",\r\n      \"valor\": \"" .
            "Preto\"\r\n    }\r\n  ],\r\n  \"imagens\": [\r\n    {\r\n      \"imagem\": \"https:" .
            "//static.ferramentaskennedy.com.br/storage/original/rabeta-para-barco-com-motor-de-" .
            "7hp-gasolina_11.jpg\",\r\n      \"ordem\": \"2\"\r\n    },\r\n    {\r\n      \"imag" .
            "em\": \"https://static.ferramentaskennedy.com.br/storage/original/rabeta-para-barco" .
            "-com-motor-de-7hp-gasolina_1.jpg\",\r\n      \"ordem\": \"1\"\r\n    },\r\n    {\r" .
            "\n      \"imagem\": \"https://static.ferramentaskennedy.com.br/storage/original/rab" .
            "eta-para-barco-com-motor-de-7hp-gasolina_3.jpg\",\r\n      \"ordem\": \"1\"\r\n    " .
            "},\r\n    {\r\n      \"imagem\": \"https://static.ferramentaskennedy.com.br/storage" .
            "/original/rabeta-para-barco-com-motor-de-7hp-gasolina_5.jpg\",\r\n      \"ordem\": " .
            "\"1\"\r\n    },\r\n    {\r\n      \"imagem\": \"https://static.ferramentaskennedy.c" .
            "om.br/storage/original/rabeta-para-barco-com-motor-de-7hp-gasolina_7.jpg\",\r\n    " .
            "  \"ordem\": \"1\"\r\n    },\r\n    {\r\n      \"imagem\": \"https://static.ferrame" .
            "ntaskennedy.com.br/storage/original/rabeta-para-barco-com-motor-de-7hp-gasolina_9.j" .
            "pg\",\r\n      \"ordem\": \"1\"\r\n    }\r\n  ],\r\n  \"informacoes_fiscais\": {\r" .
            "\n    \"ipi\": null,\r\n    \"cfop\": \"\",\r\n    \"ncm\": \"\",\r\n    \"cest\": " .
            "\"0\",\r\n    \"cst\": \"\",\r\n    \"icms\": \"0.00\",\r\n    \"reducao_icms\": nu" .
            "ll,\r\n    \"icms_st\": \"0.00\",\r\n    \"diferimento_parcial\": \"0.00\",\r\n    " .
            "\"mva\": \"0.00\",\r\n    \"origem\": \"0\",\r\n    \"tipo_origem\": \"\",\r\n    " .
            "\"csosn\": \"400\"\r\n  }\r\n}",
            Models\AtualizarProdutoRequest::class
        );

        // Perform API call
        try {
            self::$controller->atualizarProduto($body);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testExcluirProduto()
    {
        // Perform API call
        try {
            self::$controller->excluirProduto();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testListarProdutos()
    {
        // Perform API call
        try {
            self::$controller->listarProdutos();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testListarEstoques()
    {
        // Perform API call
        try {
            self::$controller->listarEstoques();
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testAtualizarEstoque()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"estoques\": [\r\n    {\r\n      \"filial_erp\": \"1\",\r\n      \"quantid" .
            "ade\": \"1\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r\n      \"estoque_dias_d" .
            "isponivel\": \"0\",\r\n      \"estoque_quantidade_fase_compra\": \"0\",\r\n      \"" .
            "quantidade_vendida\": \"10\",\r\n      \"considerar_estoque\": \"1\",\r\n      \"cr" .
            "ossdocking\": \"0\",\r\n      \"quantidade_televenda\": \"111\",\r\n      \"deposit" .
            "o_externo\": 1,\r\n      \"estoque_externo\": \"100\",\r\n      \"lote_id\": \"123" .
            "\"\r\n    },\r\n    {\r\n      \"filial_erp\": \"2\",\r\n      \"quantidade\": \"11" .
            "\",\r\n      \"estoque_dias_sem_venda\": \"0\",\r\n      \"estoque_dias_disponivel" .
            "\": \"0\",\r\n      \"estoque_quantidade_fase_compra\": \"0\",\r\n      \"quantidad" .
            "e_vendida\": \"10\",\r\n      \"considerar_estoque\": \"1\",\r\n      \"crossdockin" .
            "g\": \"0\",\r\n      \"quantidade_televenda\": \"111\",\r\n      \"deposito_externo" .
            "\": 1,\r\n      \"estoque_externo\": \"100\",\r\n      \"lote_id\": \"123\"\r\n    " .
            "}\r\n  ],\r\n  \"estoques_retira\": [\r\n    {\r\n      \"filial_erp\": \"1\",\r\n " .
            "     \"quantidade\": \"1\",\r\n      \"considerar_estoque\": \"1\"\r\n    },\r\n   " .
            " {\r\n      \"filial_erp\": \"2\",\r\n      \"quantidade\": \"1\",\r\n      \"consi" .
            "derar_estoque\": \"1\"\r\n    }\r\n  ]\r\n}",
            Models\AtualizarEstoqueRequest::class
        );

        // Perform API call
        try {
            self::$controller->atualizarEstoque($body);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testCadastrarAcessorio()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"produto_sku\": \"LNGLHTL\",\r\n  \"acessorio_sku\": \"TMPBKSM\",\r\n  \"b" .
            "ase_64\": \"https://produto.jpg\"\r\n}",
            Models\CadastrarAcessorioRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->cadastrarAcessorio($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', false];
        $headers['Server'] = ['nginx/1.19.1', false];
        $headers['Transfer-Encoding'] = ['chunked', false];
        $headers['Connection'] = ['keep-alive', false];
        $headers['X-Powered-By'] = ['PHP/7.2.34', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];
        $headers['Date'] = ['Fri, 25 Nov 2022 18:44:28 GMT', false];
        $headers['X-RateLimit-Limit'] = ['10000', false];
        $headers['X-RateLimit-Remaining'] = ['9995', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(201)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"message\": \"Imagem cadastrada com sucesso\",\r\n  \"responseCode\": \"201\"\r\n}"
            )))
            ->assert();
    }

    public function testCadastraProdutos()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"produtos\": [\r\n    {\r\n      \"sku\": \"943109\",\r\n      \"quantidad" .
            "e\": \"1\"\r\n    }\r\n  ],\r\n  \"brindes\": [\r\n    {\r\n      \"sku\": \"867597" .
            "\"\r\n    }\r\n  ]\r\n}",
            Models\CadastraProdutosRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->cadastraProdutos($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Thu, 12 Nov 2020 17:50:50 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"message\": \"Produtos cadastrados com sucesso\",\r\n  \"responseCode" .
                "\": \"200\"\r\n}"
            )))
            ->assert();
    }

    public function testConsultaProdutos()
    {
        // Perform API call
        $result = null;
        try {
            $result = self::$controller->consultaProdutos();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Thu, 12 Nov 2020 18:02:04 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"produtos\": {\r\n    \"id_campanha_brinde\": \"30\",\r\n    \"sku\": " .
                "\"968455\",\r\n    \"nome\": \"Inversora de Solda digital KSI 130A Kala - Bivol" .
                "t\",\r\n    \"quantidade\": \"1\"\r\n  },\r\n  \"brindes\": {\r\n    \"id_campa" .
                "nha_brinde\": \"30\",\r\n    \"sku\": \"913820\",\r\n    \"nome\": \"Inversora " .
                "de Solda Arc 130A 913820 Worker\"\r\n  }\r\n}"
            )))
            ->assert();
    }

    public function testDeletarProdutos()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"produtos\": [\r\n    {\r\n      \"sku\": \"968455\"\r\n    }\r\n  ],\r\n " .
            " \"brindes\": [\r\n    {\r\n      \"sku\": \"913820\"\r\n    }\r\n  ]\r\n}",
            Models\DeletarProdutosRequest::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->deletarProdutos($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Thu, 12 Nov 2020 18:03:29 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"message\": \"Produtos deletados com sucesso\",\r\n  \"responseCode\": \"200\"\r\n}"
            )))
            ->assert();
    }

    public function testCadastraProdutos1()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"produtos\": [\r\n    \"123136\",\r\n    \"137498\"\r\n  ]\r\n}",
            Models\CadastraProdutosRequest1::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->cadastraProdutos1($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Thu, 12 Nov 2020 17:50:50 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"message\": \"Produtos cadastrados com sucesso\",\r\n  \"responseCode" .
                "\": \"200\"\r\n}"
            )))
            ->assert();
    }

    public function testConsultaProdutos1()
    {
        // Perform API call
        $result = null;
        try {
            $result = self::$controller->consultaProdutos1();
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Thu, 12 Nov 2020 18:02:04 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "[\r\n  {\r\n    \"id_campanha_levemais\": \"20\",\r\n    \"status_campanha_lev" .
                "emais\": \"1\",\r\n    \"nome_campanha_levemais\": \"Pague 2 leve 3\",\r\n    " .
                "\"inicio_campanha_levemais\": \"Pague 2 leve 3\",\r\n    \"fim_campanha_levemai" .
                "s\": \"Pague 2 leve 3\",\r\n    \"prioridade_campanha_levemais\": \"10\",\r\n  " .
                "  \"comprando_produtos\": \"2\",\r\n    \"numero_produtos_beneficio\": \"1\",\r" .
                "\n    \"percentual_desconto\": \"100.00\",\r\n    \"produtos_levemais\": \"1231" .
                "36,137498\"\r\n  }\r\n]"
            )))
            ->assert();
    }

    public function testDeletarProdutos1()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"produtos\": [\r\n    \"123136\"\r\n  ]\r\n}",
            Models\DeletarProdutosRequest1::class
        );

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->deletarProdutos1($body);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json;charset=utf-8', false];
        $headers['Host'] = ['localhost:8001', false];
        $headers['Date'] = ['Thu, 12 Nov 2020 18:03:29 GMT', false];
        $headers['Connection'] = ['close', false];
        $headers['X-Powered-By'] = ['PHP/7.3.18-1+ubuntu18.04.1+deb.sury.org+1', false];
        $headers['Expires'] = ['Thu, 19 Nov 1981 08:52:00 GMT', false];
        $headers['Cache-Control'] = ['no-store, no-cache, must-revalidate', false];
        $headers['Pragma'] = ['no-cache', false];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(201)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                "{\r\n  \"message\": \"Produtos removidos com sucesso\",\r\n  \"responseCode\": \"201\"\r\n}"
            )))
            ->assert();
    }

    public function testCadastrarProduto()
    {
        // Parameters for the API call
        $body = TestParam::object(
            "{\r\n  \"campanha\": 3,\r\n  \"sku\": \"LNGLHTL\",\r\n  \"quantidade\": 200,\r\n  " .
            "\"desconto\": 5\r\n}",
            Models\CadastrarProdutoRequest1::class
        );

        // Perform API call
        try {
            self::$controller->cadastrarProduto1($body);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }

    public function testDeletarProduto()
    {
        // Parameters for the API call
        $body = TestParam::object("{\r\n  \"sku\": \"LNGLHTL\"\r\n}", Models\DeletarProdutoRequest::class);

        // Perform API call
        try {
            self::$controller->deletarProduto($body);
        } catch (Exceptions\ApiException $e) {
        }

        // Assert result with expected response
        $this->newTestCase(null)->expectStatus(200)->assert();
    }
}
