<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class Imagen implements \JsonSerializable
{
    /**
     * @var string
     */
    private $imagem;

    /**
     * @var string
     */
    private $ordem;

    /**
     * @param string $imagem
     * @param string $ordem
     */
    public function __construct(string $imagem, string $ordem)
    {
        $this->imagem = $imagem;
        $this->ordem = $ordem;
    }

    /**
     * Returns Imagem.
     */
    public function getImagem(): string
    {
        return $this->imagem;
    }

    /**
     * Sets Imagem.
     *
     * @required
     * @maps imagem
     */
    public function setImagem(string $imagem): void
    {
        $this->imagem = $imagem;
    }

    /**
     * Returns Ordem.
     */
    public function getOrdem(): string
    {
        return $this->ordem;
    }

    /**
     * Sets Ordem.
     *
     * @required
     * @maps ordem
     */
    public function setOrdem(string $ordem): void
    {
        $this->ordem = $ordem;
    }

    /**
     * Converts the Imagen object to a human-readable string representation.
     *
     * @return string The string representation of the Imagen object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('Imagen', ['imagem' => $this->imagem, 'ordem' => $this->ordem]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['imagem'] = $this->imagem;
        $json['ordem']  = $this->ordem;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
