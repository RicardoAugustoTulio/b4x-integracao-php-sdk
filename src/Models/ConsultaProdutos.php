<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class ConsultaProdutos implements \JsonSerializable
{
    /**
     * @var Produtos
     */
    private $produtos;

    /**
     * @var Brindes
     */
    private $brindes;

    /**
     * @param Produtos $produtos
     * @param Brindes $brindes
     */
    public function __construct(Produtos $produtos, Brindes $brindes)
    {
        $this->produtos = $produtos;
        $this->brindes = $brindes;
    }

    /**
     * Returns Produtos.
     */
    public function getProdutos(): Produtos
    {
        return $this->produtos;
    }

    /**
     * Sets Produtos.
     *
     * @required
     * @maps produtos
     */
    public function setProdutos(Produtos $produtos): void
    {
        $this->produtos = $produtos;
    }

    /**
     * Returns Brindes.
     */
    public function getBrindes(): Brindes
    {
        return $this->brindes;
    }

    /**
     * Sets Brindes.
     *
     * @required
     * @maps brindes
     */
    public function setBrindes(Brindes $brindes): void
    {
        $this->brindes = $brindes;
    }

    /**
     * Converts the ConsultaProdutos object to a human-readable string representation.
     *
     * @return string The string representation of the ConsultaProdutos object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ConsultaProdutos',
            ['produtos' => $this->produtos, 'brindes' => $this->brindes]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['produtos'] = $this->produtos;
        $json['brindes']  = $this->brindes;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
