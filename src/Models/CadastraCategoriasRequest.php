<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class CadastraCategoriasRequest implements \JsonSerializable
{
    /**
     * @var int
     */
    private $tipo;

    /**
     * @var string
     */
    private $valorTotal;

    /**
     * @var Categoria1[]
     */
    private $categorias;

    /**
     * @var Brindes1[]
     */
    private $brindes;

    /**
     * @param int $tipo
     * @param string $valorTotal
     * @param Categoria1[] $categorias
     * @param Brindes1[] $brindes
     */
    public function __construct(int $tipo, string $valorTotal, array $categorias, array $brindes)
    {
        $this->tipo = $tipo;
        $this->valorTotal = $valorTotal;
        $this->categorias = $categorias;
        $this->brindes = $brindes;
    }

    /**
     * Returns Tipo.
     */
    public function getTipo(): int
    {
        return $this->tipo;
    }

    /**
     * Sets Tipo.
     *
     * @required
     * @maps tipo
     */
    public function setTipo(int $tipo): void
    {
        $this->tipo = $tipo;
    }

    /**
     * Returns Valor Total.
     */
    public function getValorTotal(): string
    {
        return $this->valorTotal;
    }

    /**
     * Sets Valor Total.
     *
     * @required
     * @maps valorTotal
     */
    public function setValorTotal(string $valorTotal): void
    {
        $this->valorTotal = $valorTotal;
    }

    /**
     * Returns Categorias.
     *
     * @return Categoria1[]
     */
    public function getCategorias(): array
    {
        return $this->categorias;
    }

    /**
     * Sets Categorias.
     *
     * @required
     * @maps categorias
     *
     * @param Categoria1[] $categorias
     */
    public function setCategorias(array $categorias): void
    {
        $this->categorias = $categorias;
    }

    /**
     * Returns Brindes.
     *
     * @return Brindes1[]
     */
    public function getBrindes(): array
    {
        return $this->brindes;
    }

    /**
     * Sets Brindes.
     *
     * @required
     * @maps brindes
     *
     * @param Brindes1[] $brindes
     */
    public function setBrindes(array $brindes): void
    {
        $this->brindes = $brindes;
    }

    /**
     * Converts the CadastraCategoriasRequest object to a human-readable string representation.
     *
     * @return string The string representation of the CadastraCategoriasRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CadastraCategoriasRequest',
            [
                'tipo' => $this->tipo,
                'valorTotal' => $this->valorTotal,
                'categorias' => $this->categorias,
                'brindes' => $this->brindes
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['tipo']       = $this->tipo;
        $json['valorTotal'] = $this->valorTotal;
        $json['categorias'] = $this->categorias;
        $json['brindes']    = $this->brindes;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
