<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class CadastrarUsuarioRequest implements \JsonSerializable
{
    /**
     * @var int
     */
    private $codigo;

    /**
     * @var string
     */
    private $nome;

    /**
     * @var string
     */
    private $login;

    /**
     * @var string
     */
    private $email;

    /**
     * @var string
     */
    private $nivel;

    /**
     * @var Filiai[]
     */
    private $filiais;

    /**
     * @param int $codigo
     * @param string $nome
     * @param string $login
     * @param string $email
     * @param string $nivel
     * @param Filiai[] $filiais
     */
    public function __construct(int $codigo, string $nome, string $login, string $email, string $nivel, array $filiais)
    {
        $this->codigo = $codigo;
        $this->nome = $nome;
        $this->login = $login;
        $this->email = $email;
        $this->nivel = $nivel;
        $this->filiais = $filiais;
    }

    /**
     * Returns Codigo.
     */
    public function getCodigo(): int
    {
        return $this->codigo;
    }

    /**
     * Sets Codigo.
     *
     * @required
     * @maps codigo
     */
    public function setCodigo(int $codigo): void
    {
        $this->codigo = $codigo;
    }

    /**
     * Returns Nome.
     */
    public function getNome(): string
    {
        return $this->nome;
    }

    /**
     * Sets Nome.
     *
     * @required
     * @maps nome
     */
    public function setNome(string $nome): void
    {
        $this->nome = $nome;
    }

    /**
     * Returns Login.
     */
    public function getLogin(): string
    {
        return $this->login;
    }

    /**
     * Sets Login.
     *
     * @required
     * @maps login
     */
    public function setLogin(string $login): void
    {
        $this->login = $login;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @required
     * @maps email
     */
    public function setEmail(string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Nivel.
     */
    public function getNivel(): string
    {
        return $this->nivel;
    }

    /**
     * Sets Nivel.
     *
     * @required
     * @maps nivel
     */
    public function setNivel(string $nivel): void
    {
        $this->nivel = $nivel;
    }

    /**
     * Returns Filiais.
     *
     * @return Filiai[]
     */
    public function getFiliais(): array
    {
        return $this->filiais;
    }

    /**
     * Sets Filiais.
     *
     * @required
     * @maps filiais
     *
     * @param Filiai[] $filiais
     */
    public function setFiliais(array $filiais): void
    {
        $this->filiais = $filiais;
    }

    /**
     * Converts the CadastrarUsuarioRequest object to a human-readable string representation.
     *
     * @return string The string representation of the CadastrarUsuarioRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CadastrarUsuarioRequest',
            [
                'codigo' => $this->codigo,
                'nome' => $this->nome,
                'login' => $this->login,
                'email' => $this->email,
                'nivel' => $this->nivel,
                'filiais' => $this->filiais
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['codigo']  = $this->codigo;
        $json['nome']    = $this->nome;
        $json['login']   = $this->login;
        $json['email']   = $this->email;
        $json['nivel']   = $this->nivel;
        $json['filiais'] = $this->filiais;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
