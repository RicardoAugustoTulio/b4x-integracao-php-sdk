<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class CadastraProdutos implements \JsonSerializable
{
    /**
     * @var string
     */
    private $message;

    /**
     * @var string
     */
    private $responseCode;

    /**
     * @param string $message
     * @param string $responseCode
     */
    public function __construct(string $message, string $responseCode)
    {
        $this->message = $message;
        $this->responseCode = $responseCode;
    }

    /**
     * Returns Message.
     */
    public function getMessage(): string
    {
        return $this->message;
    }

    /**
     * Sets Message.
     *
     * @required
     * @maps message
     */
    public function setMessage(string $message): void
    {
        $this->message = $message;
    }

    /**
     * Returns Response Code.
     */
    public function getResponseCode(): string
    {
        return $this->responseCode;
    }

    /**
     * Sets Response Code.
     *
     * @required
     * @maps responseCode
     */
    public function setResponseCode(string $responseCode): void
    {
        $this->responseCode = $responseCode;
    }

    /**
     * Converts the CadastraProdutos object to a human-readable string representation.
     *
     * @return string The string representation of the CadastraProdutos object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CadastraProdutos',
            ['message' => $this->message, 'responseCode' => $this->responseCode]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['message']      = $this->message;
        $json['responseCode'] = $this->responseCode;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
