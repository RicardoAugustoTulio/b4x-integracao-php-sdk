<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class DeletaNFPedidoRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $operacao;

    /**
     * @var string
     */
    private $numero;

    /**
     * @param string $operacao
     * @param string $numero
     */
    public function __construct(string $operacao, string $numero)
    {
        $this->operacao = $operacao;
        $this->numero = $numero;
    }

    /**
     * Returns Operacao.
     */
    public function getOperacao(): string
    {
        return $this->operacao;
    }

    /**
     * Sets Operacao.
     *
     * @required
     * @maps operacao
     */
    public function setOperacao(string $operacao): void
    {
        $this->operacao = $operacao;
    }

    /**
     * Returns Numero.
     */
    public function getNumero(): string
    {
        return $this->numero;
    }

    /**
     * Sets Numero.
     *
     * @required
     * @maps numero
     */
    public function setNumero(string $numero): void
    {
        $this->numero = $numero;
    }

    /**
     * Converts the DeletaNFPedidoRequest object to a human-readable string representation.
     *
     * @return string The string representation of the DeletaNFPedidoRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'DeletaNFPedidoRequest',
            ['operacao' => $this->operacao, 'numero' => $this->numero]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['operacao'] = $this->operacao;
        $json['numero']   = $this->numero;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
