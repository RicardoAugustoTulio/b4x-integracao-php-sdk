<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models\Builders;

use ApiB4CLib\Models\Acessorio;
use ApiB4CLib\Models\Atributo;
use ApiB4CLib\Models\AtualizarProdutoRequest;
use ApiB4CLib\Models\Dimensoes;
use ApiB4CLib\Models\Estoque;
use ApiB4CLib\Models\EstoquesRetira;
use ApiB4CLib\Models\Imagen;
use ApiB4CLib\Models\InformacoesFiscais;
use ApiB4CLib\Models\Kit;
use ApiB4CLib\Models\Personalizaco;
use Core\Utils\CoreHelper;

/**
 * Builder for model AtualizarProdutoRequest
 *
 * @see AtualizarProdutoRequest
 */
class AtualizarProdutoRequestBuilder
{
    /**
     * @var AtualizarProdutoRequest
     */
    private $instance;

    private function __construct(AtualizarProdutoRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Atualizar Produto Request Builder object.
     *
     * @param int $ativoErp
     * @param string $statusErp
     * @param string $sku
     * @param string $skusAssociado
     * @param string $paiId
     * @param string $nome
     * @param string $nomeErp
     * @param string $tituloSeo
     * @param string $titulo
     * @param string $descricao
     * @param string $codigoCategoria
     * @param string $codigoMarca
     * @param string $palavrasChave
     * @param string $metaDescricao
     * @param string $codigoFabricante
     * @param string $modelo
     * @param string $prodReferencia
     * @param string[] $restricoes
     * @param string[] $compreJunto
     * @param string[] $produtosSugeridos
     * @param int[] $categorias
     * @param string $ean
     * @param Dimensoes $dimensoes
     * @param string $estoqueDiasSemVenda
     * @param string $estoqueDiasDisponivel
     * @param string $estoqueQuantidadeFaseCompra
     * @param string $precoCusto
     * @param string $preco
     * @param string $unidadeVenda
     * @param int $unidadeEmbalagem
     * @param int $vendaMinima
     * @param string $garantia
     * @param string $codigoComprador
     * @param string $video
     * @param string $certificadoAutorizacaoCa
     * @param Kit[] $kit
     * @param string $crossdocking
     * @param EstoquesRetira[] $estoquesRetira
     * @param Estoque[] $estoques
     * @param Acessorio[] $acessorios
     * @param Personalizaco[] $personalizacoes
     * @param Atributo[] $atributos
     * @param Imagen[] $imagens
     * @param InformacoesFiscais $informacoesFiscais
     */
    public static function init(
        int $ativoErp,
        string $statusErp,
        string $sku,
        string $skusAssociado,
        string $paiId,
        string $nome,
        string $nomeErp,
        string $tituloSeo,
        string $titulo,
        string $descricao,
        string $codigoCategoria,
        string $codigoMarca,
        string $palavrasChave,
        string $metaDescricao,
        string $codigoFabricante,
        string $modelo,
        string $prodReferencia,
        array $restricoes,
        array $compreJunto,
        array $produtosSugeridos,
        array $categorias,
        string $ean,
        Dimensoes $dimensoes,
        string $estoqueDiasSemVenda,
        string $estoqueDiasDisponivel,
        string $estoqueQuantidadeFaseCompra,
        string $precoCusto,
        string $preco,
        string $unidadeVenda,
        int $unidadeEmbalagem,
        int $vendaMinima,
        string $garantia,
        string $codigoComprador,
        string $video,
        string $certificadoAutorizacaoCa,
        array $kit,
        string $crossdocking,
        array $estoquesRetira,
        array $estoques,
        array $acessorios,
        array $personalizacoes,
        array $atributos,
        array $imagens,
        InformacoesFiscais $informacoesFiscais
    ): self {
        return new self(new AtualizarProdutoRequest(
            $ativoErp,
            $statusErp,
            $sku,
            $skusAssociado,
            $paiId,
            $nome,
            $nomeErp,
            $tituloSeo,
            $titulo,
            $descricao,
            $codigoCategoria,
            $codigoMarca,
            $palavrasChave,
            $metaDescricao,
            $codigoFabricante,
            $modelo,
            $prodReferencia,
            $restricoes,
            $compreJunto,
            $produtosSugeridos,
            $categorias,
            $ean,
            $dimensoes,
            $estoqueDiasSemVenda,
            $estoqueDiasDisponivel,
            $estoqueQuantidadeFaseCompra,
            $precoCusto,
            $preco,
            $unidadeVenda,
            $unidadeEmbalagem,
            $vendaMinima,
            $garantia,
            $codigoComprador,
            $video,
            $certificadoAutorizacaoCa,
            $kit,
            $crossdocking,
            $estoquesRetira,
            $estoques,
            $acessorios,
            $personalizacoes,
            $atributos,
            $imagens,
            $informacoesFiscais
        ));
    }

    /**
     * Sets produto substituto field.
     *
     * @param string|null $value
     */
    public function produtoSubstituto(?string $value): self
    {
        $this->instance->setProdutoSubstituto($value);
        return $this;
    }

    /**
     * Initializes a new Atualizar Produto Request object.
     */
    public function build(): AtualizarProdutoRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
