<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class Faturamento implements \JsonSerializable
{
    /**
     * @var int
     */
    private $unidade;

    /**
     * @var int[]
     */
    private $logistica;

    /**
     * @param int $unidade
     * @param int[] $logistica
     */
    public function __construct(int $unidade, array $logistica)
    {
        $this->unidade = $unidade;
        $this->logistica = $logistica;
    }

    /**
     * Returns Unidade.
     */
    public function getUnidade(): int
    {
        return $this->unidade;
    }

    /**
     * Sets Unidade.
     *
     * @required
     * @maps unidade
     */
    public function setUnidade(int $unidade): void
    {
        $this->unidade = $unidade;
    }

    /**
     * Returns Logistica.
     *
     * @return int[]
     */
    public function getLogistica(): array
    {
        return $this->logistica;
    }

    /**
     * Sets Logistica.
     *
     * @required
     * @maps logistica
     *
     * @param int[] $logistica
     */
    public function setLogistica(array $logistica): void
    {
        $this->logistica = $logistica;
    }

    /**
     * Converts the Faturamento object to a human-readable string representation.
     *
     * @return string The string representation of the Faturamento object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('Faturamento', ['unidade' => $this->unidade, 'logistica' => $this->logistica]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['unidade']   = $this->unidade;
        $json['logistica'] = $this->logistica;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
