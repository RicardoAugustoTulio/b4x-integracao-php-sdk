<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class CadastraBrindesRequest implements \JsonSerializable
{
    /**
     * @var Brindes1[]
     */
    private $brindes;

    /**
     * @param Brindes1[] $brindes
     */
    public function __construct(array $brindes)
    {
        $this->brindes = $brindes;
    }

    /**
     * Returns Brindes.
     *
     * @return Brindes1[]
     */
    public function getBrindes(): array
    {
        return $this->brindes;
    }

    /**
     * Sets Brindes.
     *
     * @required
     * @maps brindes
     *
     * @param Brindes1[] $brindes
     */
    public function setBrindes(array $brindes): void
    {
        $this->brindes = $brindes;
    }

    /**
     * Converts the CadastraBrindesRequest object to a human-readable string representation.
     *
     * @return string The string representation of the CadastraBrindesRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('CadastraBrindesRequest', ['brindes' => $this->brindes]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['brindes'] = $this->brindes;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
