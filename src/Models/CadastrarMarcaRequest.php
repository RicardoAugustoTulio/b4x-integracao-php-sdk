<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class CadastrarMarcaRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $codigo;

    /**
     * @var string
     */
    private $descricao;

    /**
     * @param string $codigo
     * @param string $descricao
     */
    public function __construct(string $codigo, string $descricao)
    {
        $this->codigo = $codigo;
        $this->descricao = $descricao;
    }

    /**
     * Returns Codigo.
     */
    public function getCodigo(): string
    {
        return $this->codigo;
    }

    /**
     * Sets Codigo.
     *
     * @required
     * @maps codigo
     */
    public function setCodigo(string $codigo): void
    {
        $this->codigo = $codigo;
    }

    /**
     * Returns Descricao.
     */
    public function getDescricao(): string
    {
        return $this->descricao;
    }

    /**
     * Sets Descricao.
     *
     * @required
     * @maps descricao
     */
    public function setDescricao(string $descricao): void
    {
        $this->descricao = $descricao;
    }

    /**
     * Converts the CadastrarMarcaRequest object to a human-readable string representation.
     *
     * @return string The string representation of the CadastrarMarcaRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CadastrarMarcaRequest',
            ['codigo' => $this->codigo, 'descricao' => $this->descricao]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['codigo']    = $this->codigo;
        $json['descricao'] = $this->descricao;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
