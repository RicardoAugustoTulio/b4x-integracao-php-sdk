<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class ConsultaMarca implements \JsonSerializable
{
    /**
     * @var Marca[]
     */
    private $marcas;

    /**
     * @var Brindes2[]
     */
    private $brindes;

    /**
     * @param Marca[] $marcas
     * @param Brindes2[] $brindes
     */
    public function __construct(array $marcas, array $brindes)
    {
        $this->marcas = $marcas;
        $this->brindes = $brindes;
    }

    /**
     * Returns Marcas.
     *
     * @return Marca[]
     */
    public function getMarcas(): array
    {
        return $this->marcas;
    }

    /**
     * Sets Marcas.
     *
     * @required
     * @maps marcas
     *
     * @param Marca[] $marcas
     */
    public function setMarcas(array $marcas): void
    {
        $this->marcas = $marcas;
    }

    /**
     * Returns Brindes.
     *
     * @return Brindes2[]
     */
    public function getBrindes(): array
    {
        return $this->brindes;
    }

    /**
     * Sets Brindes.
     *
     * @required
     * @maps brindes
     *
     * @param Brindes2[] $brindes
     */
    public function setBrindes(array $brindes): void
    {
        $this->brindes = $brindes;
    }

    /**
     * Converts the ConsultaMarca object to a human-readable string representation.
     *
     * @return string The string representation of the ConsultaMarca object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('ConsultaMarca', ['marcas' => $this->marcas, 'brindes' => $this->brindes]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['marcas']  = $this->marcas;
        $json['brindes'] = $this->brindes;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
