<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Models;

use ApiB4CLib\ApiHelper;
use stdClass;

class Marca implements \JsonSerializable
{
    /**
     * @var string
     */
    private $campanha;

    /**
     * @var string
     */
    private $nome;

    /**
     * @var string
     */
    private $quantidade;

    /**
     * @param string $campanha
     * @param string $nome
     * @param string $quantidade
     */
    public function __construct(string $campanha, string $nome, string $quantidade)
    {
        $this->campanha = $campanha;
        $this->nome = $nome;
        $this->quantidade = $quantidade;
    }

    /**
     * Returns Campanha.
     */
    public function getCampanha(): string
    {
        return $this->campanha;
    }

    /**
     * Sets Campanha.
     *
     * @required
     * @maps campanha
     */
    public function setCampanha(string $campanha): void
    {
        $this->campanha = $campanha;
    }

    /**
     * Returns Nome.
     */
    public function getNome(): string
    {
        return $this->nome;
    }

    /**
     * Sets Nome.
     *
     * @required
     * @maps nome
     */
    public function setNome(string $nome): void
    {
        $this->nome = $nome;
    }

    /**
     * Returns Quantidade.
     */
    public function getQuantidade(): string
    {
        return $this->quantidade;
    }

    /**
     * Sets Quantidade.
     *
     * @required
     * @maps quantidade
     */
    public function setQuantidade(string $quantidade): void
    {
        $this->quantidade = $quantidade;
    }

    /**
     * Converts the Marca object to a human-readable string representation.
     *
     * @return string The string representation of the Marca object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Marca',
            ['campanha' => $this->campanha, 'nome' => $this->nome, 'quantidade' => $this->quantidade]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['campanha']   = $this->campanha;
        $json['nome']       = $this->nome;
        $json['quantidade'] = $this->quantidade;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
