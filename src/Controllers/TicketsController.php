<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Controllers;

use ApiB4CLib\Exceptions\ApiException;
use ApiB4CLib\Models\NewRequest11;
use ApiB4CLib\Models\StatusPedido;
use Core\Request\Parameters\TemplateParam;
use CoreInterfaces\Core\Request\RequestMethod;

class TicketsController extends BaseController
{
    /**
     * Permite listar os dados do cliente com base no cpf do cliente
     *
     * **`#GET /tickets/cliente/{cpf}`**
     *
     * | Nome | Descrição | Inf Adicional |
     * | --- | --- | --- |
     * | cpf | cpf do cliente na plataforma. | campo obrigatório. |
     *
     * @param string $cpf
     *
     * @return NewRequest11 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function cliente(string $cpf): NewRequest11
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/tickets/cliente/{cpf}')
            ->auth('basic')
            ->parameters(TemplateParam::init('cpf', $cpf));

        $_resHandler = $this->responseHandler()->type(NewRequest11::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Permite listar o status atual do pedido.
     *
     * **`#GET /tickets/status/{codigo}`**
     *
     * | Nome | Descrição | Inf Adicional |
     * | --- | --- | --- |
     * | codigo | codigo do pedido na plataforma. | campo obrigatório. |
     *
     * @param string $codigo
     *
     * @return StatusPedido[] Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function statusPedidos(string $codigo): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/tickets/status/{codigo}')
            ->auth('basic')
            ->parameters(TemplateParam::init('codigo', $codigo));

        $_resHandler = $this->responseHandler()->type(StatusPedido::class, 1);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param string $codigo
     *
     * @return void Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function tracking(string $codigo): void
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/tickets/tracking/{codigo}')
            ->auth('basic')
            ->parameters(TemplateParam::init('codigo', $codigo));

        $this->execute($_reqBuilder);
    }
}
