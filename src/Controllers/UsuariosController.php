<?php

declare(strict_types=1);

/*
 * ApiB4CLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ApiB4CLib\Controllers;

use ApiB4CLib\Exceptions\ApiException;
use ApiB4CLib\Models\AtualizarUsuario;
use ApiB4CLib\Models\AtualizarUsuarioRequest;
use ApiB4CLib\Models\CadastrarUsuario;
use ApiB4CLib\Models\CadastrarUsuarioRequest;
use ApiB4CLib\Models\InativarUsuario;
use ApiB4CLib\Models\ListaDosNivei;
use ApiB4CLib\Models\ListaUsuario;
use Core\Request\Parameters\BodyParam;
use CoreInterfaces\Core\Request\RequestMethod;

class UsuariosController extends BaseController
{
    /**
     * _`GET /usuarios/?offest={Offest}&Limit={Limit}`_
     *
     * \*_Retorna todos os usuários
     * \*_Requisição
     * **Parâmetros da Url
     *
     * | Nome | Descrição | Tipo | Inf Adicional |
     * | --- | --- | --- | --- |
     * | Offset | Ignora os primeiros { Offset } itens | Integer |  |
     * | Limit | Define a quantidade de registros | Integer | 200 registros |
     *
     * View more
     *
     * _Requisição
     * \*Parâmetros da Url
     * \*__`#GET /usuarios/{codigo}`_
     * **Retorna informações sobre um usuário cadastrado
     *
     * | Nome | Descrição | Tipo | Obrigatório |
     * | --- | --- | --- | --- |
     * | codigo | código do usuário | string | Sim |
     *
     * View more
     *
     * _Resposta_
     *
     * | nome | descricao | tipo |
     * | --- | --- | --- |
     * | codigo | codigo do usuario | string |
     * | nome | nome do usuário | string |
     * | email | email do usuário | string |
     * | status | status do usuário | string |
     * | nivel | nivel do perfil do usuário | string |
     *
     * _Output_
     *
     * \`\`\`json
     * \[
     *
     * {
     * "codigo": "4",
     *
     * "nome": "Teste Api3",
     *
     * "email": "beyin50980@pixiil.com",
     *
     * "status": "0",
     *
     * "nivel": "1"
     *
     * }
     *
     * \]
     *
     * @return ListaUsuario[] Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function listaUsuarios(): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/usuarios/4')->auth('basic');

        $_resHandler = $this->responseHandler()->type(ListaUsuario::class, 1);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * ###Adicionar usuario
     *
     * _`#POST /usuarios`_
     *
     * **Requisição**
     *
     * \*Body
     *
     * | nome | descricao | tipo | obrigatorio |
     * | --- | --- | --- | --- |
     * | codigo | codigo do usuario | string | sim |
     * | descricao | nome do usuario | string | sim |
     * | login | login do usuario | string | sim |
     * | email | email do usuario | string | sim |
     * | nivel | nivel do perfil do usuario | string | sim |
     * | empresa_id | empresa vinculada ao usuario (Caso o cadastro seja para o cerebro) | string | não |
     * | filiais | array com as filiais cadastradas do usuarios | array | não |
     * | filial | codigo que indica a filial | string | não |
     *
     * \*_\\_Exemplo
     *
     * JSON
     *
     * ```
     * {
     * "codigo": 5,
     * "nome": "Teste Api2",
     * "login": "teste api",
     * "email": "beyin50980@pixiil.com",
     * "nivel": "1",
     * "filiais": [
     * {
     * "filial": "0"
     * }
     * ]
     * }
     *
     * ```
     *
     * **Resposta
     *
     * | HTTP Status Code | Descricao | Resposta | json |
     * | --- | --- | --- | --- |
     * | 201 | categoria cadastrada com sucesso | mensagem | {"Usuario cadastrado com sucesso"} |
     * | 4xx | Requisição inválida | mensagem | {"Codigo ou email já cadastrado"} |
     * | 500 | Erro desconhecido. | mensagem | {"erro deconhecido contate o suporte: [suporte@b4commerce.
     * com.br](https://desktop.postman.com/?desktopVersion=9.31.28&userId=13470086&teamId=0)"} |
     *
     * @param CadastrarUsuarioRequest $body
     *
     * @return CadastrarUsuario Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function cadastrarUsuario(CadastrarUsuarioRequest $body): CadastrarUsuario
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/usuarios')
            ->auth('basic')
            ->parameters(BodyParam::init($body));

        $_resHandler = $this->responseHandler()->type(CadastrarUsuario::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * ###Alterar Usuario
     * _`#PUT /usuarios/{codigo}`_
     *
     * \*Requisição
     *
     * Parâmetros da Url
     *
     * | Nome | Descrição | Tipo | Obrigatório |
     * | --- | --- | --- | --- |
     * | codigo | código do usuario | string | Sim |
     *
     * View more
     *
     * _Body_
     *
     * | nome | descricao | tipo |
     * | --- | --- | --- |
     * | nome | nome do usuario | string |
     * | email | email do usuario | string |
     * | login | login do usuario | string |
     * | nivel | nivel do perfil do usuario | string |
     * | status | status do usuario | string |
     * | empresa_id | empresa vinculada ao usuario (Caso o cadastro seja para o cerebro) | string |
     * | tipo_vendedor | tipo do vendedor | int |
     * | filiais | array com as filiais cadastradas do usuarios | array |
     * | filial | codigo que indica a filial | string |
     *
     * | tipo vendedor | descricao |
     * | --- | --- |
     * | 1 | Site televendas |
     * | 2 | Loja fisíca |
     *
     * _Exemplo_
     *
     * JSON
     *
     * ```
     * {
     * "nome": "Teste Api3",
     * "login": "teste api",
     * "email": "beyin50980@pixiil.com",
     * "nivel": "1",
     * "status": "0"
     * }
     *
     * ```
     *
     * _Resposta_
     *
     * | HTTP Status Code | Descricao | Resposta | json |
     * | --- | --- | --- | --- |
     * | 200 | usuario alterado com Sucesso | mensagem | {"usuario atualizado com sucesso"} |
     * | 4xx | Requisição inválida | mensagem | {"usuario nao encontrado"} |
     * | 500 | Erro desconhecido. | mensagem | {"erro deconhecido contate o suporte: [suporte@b4commerce.
     * com.br](https://desktop.postman.com/?desktopVersion=9.31.28&userId=13470086&teamId=0) "} |
     *
     * View moreBodyraw (text)text
     *
     * ```
     * {
     * "nome": "Teste Api3",
     * "login": "teste api",
     * "email": "beyin50980@pixiil.com",
     * "nivel": "1",
     * "status": "0"
     * }
     *
     * ```
     *
     * @param AtualizarUsuarioRequest $body
     *
     * @return AtualizarUsuario Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function atualizarUsuario(AtualizarUsuarioRequest $body): AtualizarUsuario
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::PUT, '/usuarios/4')
            ->auth('basic')
            ->parameters(BodyParam::init($body));

        $_resHandler = $this->responseHandler()->type(AtualizarUsuario::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * _`#DELETE/usuarios/{codigo}`_
     *
     * \*_Requisição
     * \*_Parâmetros da Url
     *
     * | Nome | Descrição | Tipo | Obrigatório |
     * | --- | --- | --- | --- |
     * | codigo | código do usuario | string | Sim |
     *
     * View more
     *
     * \*Body
     * N/A
     *
     * _Resposta_
     *
     * | HTTP Status Code | Descricao | Resposta | json |
     * | --- | --- | --- | --- |
     * | 200 | usuario inativado com Sucesso | mensagem | {"Usuario atualizado com sucesso"} |
     * | 4xx | Requisição inválida | mensagem | {"Usuario nao encontrado"} |
     * | 500 | Erro desconhecido. | mensagem | {"erro deconhecido contate o suporte: [suporte@b4commerce.
     * com.br](https://desktop.postman.com/?desktopVersion=9.31.28&userId=13470086&teamId=0) "} |
     *
     * @return InativarUsuario Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function inativarUsuario(): InativarUsuario
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::DELETE, '/usuarios/4')->auth('basic');

        $_resHandler = $this->responseHandler()->type(InativarUsuario::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @return ListaDosNivei[] Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function listaDosNiveis(): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/usuarios/nivel')->auth('basic');

        $_resHandler = $this->responseHandler()->type(ListaDosNivei::class, 1);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
